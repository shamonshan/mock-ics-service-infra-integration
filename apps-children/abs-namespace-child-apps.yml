# App templates can also be defined as part of the generator's template stanza. Sometimes it is
# useful to do this in order to override the spec.template stanza, and when simple string
# parameterization are insufficient. In the below examples, the generators[].XXX.template is 
# a partial definition, which overrides/patch the default template.
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: abs-namespace-child-apps
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - list:
      elements:
        - name: app-common-ui
          namespace: app-common-port
          url: https://github.com/shamonshan/mock-ics-service-ui
          imageversion: 1.0.0
          helmvaluespath: values-ui.yml
        - name: app-common-org
          namespace: app-common-port
          url: https://github.com/shamonshan/mock-ics-service-organization-backend
          imageversion: 1.0.0
          helmvaluespath: values-org.yml
  strategy:
    type: RollingUpdate
    rollingUpdate:
      steps:
        - matchExpressions:
            - key: type
              operator: In
              values:
                - abs-namespace-child-apps
          maxUpdate: 1
  template:
    metadata:
      name: '{{.name}}'
      labels:
        name: abs-children-apps
        type: abs-namespace-child-apps
    spec:
      project: mock-ics-service-infra-integration
      destination:
        name: in-cluster
        namespace: '{{.namespace}}'
      source:
        repoURL: '{{.url}}'
        path: helm
        helm:
          valueFiles:
          - values.yaml